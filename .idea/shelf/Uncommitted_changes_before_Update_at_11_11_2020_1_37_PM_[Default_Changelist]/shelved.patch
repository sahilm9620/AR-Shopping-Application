Index: app/src/main/java/com/shopping_point/user_shopping_point/view/ProductActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.shopping_point.user_shopping_point.view;\r\n\r\nimport android.Manifest;\r\nimport android.app.Dialog;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProviders;\r\nimport androidx.paging.PagedList;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageManager;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport android.graphics.Bitmap;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.Priority;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.bumptech.glide.request.RequestOptions;\r\nimport com.shopping_point.user_shopping_point.R;\r\nimport com.shopping_point.user_shopping_point.ViewModel.HistoryViewModel;\r\nimport com.shopping_point.user_shopping_point.ViewModel.ProductViewModel;\r\nimport com.shopping_point.user_shopping_point.ViewModel.UploadPhotoViewModel;\r\nimport com.shopping_point.user_shopping_point.ViewModel.UserImageViewModel;\r\nimport com.shopping_point.user_shopping_point.adapter.ProductAdapter;\r\nimport com.shopping_point.user_shopping_point.databinding.ActivityProductBinding;\r\nimport com.shopping_point.user_shopping_point.model.Product;\r\nimport com.shopping_point.user_shopping_point.receiver.NetworkChangeReceiver;\r\nimport com.shopping_point.user_shopping_point.storage.LoginUtils;\r\nimport com.shopping_point.user_shopping_point.utils.OnNetworkListener;\r\nimport com.shopping_point.user_shopping_point.utils.Slide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\nimport static com.shopping_point.user_shopping_point.storage.LanguageUtils.loadLocale;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.CAMERA_PERMISSION_CODE;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.CAMERA_REQUEST;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.CATEGORY;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.GALLERY_REQUEST;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.LOCALHOST;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.PRODUCT;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.READ_EXTERNAL_STORAGE_CODE;\r\nimport static com.shopping_point.user_shopping_point.utils.ImageUtils.getImageUri;\r\nimport static com.shopping_point.user_shopping_point.utils.ImageUtils.getRealPathFromURI;\r\nimport static com.shopping_point.user_shopping_point.utils.InternetUtils.isNetworkConnected;\r\nimport static com.shopping_point.user_shopping_point.view.AccountActivity.historyIsDeleted;\r\n\r\npublic class ProductActivity extends AppCompatActivity implements View.OnClickListener, OnNetworkListener, ProductAdapter.ProductAdapterOnClickHandler,\r\n        NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    private static final String TAG = \"ProductActivity\";\r\n    private ActivityProductBinding binding;\r\n\r\n    private ProductAdapter mobileAdapter;\r\n    private ProductAdapter laptopAdapter;\r\n    private ProductAdapter historyAdapter;\r\n\r\n    private ProductViewModel productViewModel;\r\n    private HistoryViewModel historyViewModel;\r\n    private UploadPhotoViewModel uploadPhotoViewModel;\r\n    private UserImageViewModel userImageViewModel;\r\n\r\n    private Snackbar snack;\r\n\r\n    private CircleImageView circleImageView,circleImageView1;\r\n    private Uri selectedImage;\r\n\r\n    private NetworkChangeReceiver mNetworkReceiver;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        loadLocale(this);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_product);\r\n\r\n        int userID = LoginUtils.getInstance(this).getUserInfo().getId();\r\n\r\n        productViewModel = ViewModelProviders.of(this).get(ProductViewModel.class);\r\n        productViewModel.loadMobiles(\"mobile\", userID);\r\n        productViewModel.loadLaptops(\"laptop\",userID);\r\n        historyViewModel = ViewModelProviders.of(this).get(HistoryViewModel.class);\r\n        historyViewModel.loadHistory(userID);\r\n        uploadPhotoViewModel = ViewModelProviders.of(this).get(UploadPhotoViewModel.class);\r\n        userImageViewModel = ViewModelProviders.of(this).get(UserImageViewModel.class);\r\n\r\n        snack = Snackbar.make(findViewById(android.R.id.content), getResources().getString(R.string.no_internet_connection), Snackbar.LENGTH_INDEFINITE);\r\n\r\n        binding.included.content.txtSeeAllMobiles.setOnClickListener(this);\r\n        binding.included.content.txtSeeAllLaptops.setOnClickListener(this);\r\n        binding.included.content.txtCash.setOnClickListener(this);\r\n        binding.included.content.txtReturn.setOnClickListener(this);\r\n        binding.included.txtSearch.setOnClickListener(this);\r\n\r\n        setUpViews();\r\n\r\n        getMobiles();\r\n        getLaptops();\r\n        getHistory();\r\n        getUserImage();\r\n\r\n        flipImages(Slide.getSlides());\r\n\r\n        mNetworkReceiver = new NetworkChangeReceiver();\r\n        mNetworkReceiver.setOnNetworkListener(this);\r\n    }\r\n\r\n    private void setUpViews() {\r\n        Toolbar toolbar = binding.included.toolbar;\r\n        setSupportActionBar(toolbar);\r\n\r\n        DrawerLayout drawer = binding.drawerLayout;\r\n\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(\r\n                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawer.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n\r\n        binding.navView.setNavigationItemSelectedListener(this);\r\n\r\n        View headerContainer = binding.navView.getHeaderView(0);\r\n        circleImageView = headerContainer.findViewById(R.id.profile_image);\r\n        circleImageView1 = headerContainer.findViewById(R.id.plus);\r\n        circleImageView1.setOnClickListener(this);\r\n        TextView userName = headerContainer.findViewById(R.id.nameOfUser);\r\n        userName.setText(LoginUtils.getInstance(this).getName());\r\n        TextView userEmail = headerContainer.findViewById(R.id.emailOfUser);\r\n        userEmail.setText(LoginUtils.getInstance(this).getUserInfo().getUser_email());\r\n\r\n        binding.included.content.listOfMobiles.setHasFixedSize(true);\r\n        binding.included.content.listOfMobiles.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\r\n        binding.included.content.listOfMobiles.setItemAnimator(null);\r\n\r\n        binding.included.content.listOfLaptops.setHasFixedSize(true);\r\n        binding.included.content.listOfLaptops.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\r\n        binding.included.content.listOfLaptops.setItemAnimator(null);\r\n\r\n        binding.included.content.historyList.setHasFixedSize(true);\r\n        binding.included.content.historyList.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\r\n        binding.included.content.historyList.setItemAnimator(null);\r\n\r\n        mobileAdapter = new ProductAdapter(this, this);\r\n        laptopAdapter = new ProductAdapter(this, this);\r\n        historyAdapter = new ProductAdapter(this, this);\r\n\r\n        if (historyIsDeleted) {\r\n            binding.included.content.textViewHistory.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    private void getMobiles() {\r\n        if (isNetworkConnected(this)) {\r\n            productViewModel.productPagedList.observe(this, new Observer<PagedList<Product>>() {\r\n                @Override\r\n                public void onChanged(@Nullable PagedList<Product> products) {\r\n                    mobileAdapter.submitList(products);\r\n                }\r\n            });\r\n\r\n            binding.included.content.listOfMobiles.setAdapter(mobileAdapter);\r\n            mobileAdapter.notifyDataSetChanged();\r\n        } else {\r\n            showOrHideViews(View.INVISIBLE);\r\n            showSnackBar();\r\n        }\r\n    }\r\n\r\n    private void getLaptops() {\r\n        if (isNetworkConnected(this)) {\r\n            productViewModel.laptopPagedList.observe(this, new Observer<PagedList<Product>>() {\r\n                @Override\r\n                public void onChanged(@Nullable PagedList<Product> products) {\r\n                    laptopAdapter.submitList(products);\r\n                }\r\n            });\r\n\r\n            binding.included.content.listOfLaptops.setAdapter(laptopAdapter);\r\n            laptopAdapter.notifyDataSetChanged();\r\n        } else {\r\n            showOrHideViews(View.INVISIBLE);\r\n            showSnackBar();\r\n        }\r\n    }\r\n\r\n    private void getHistory() {\r\n        if (isNetworkConnected(this)) {\r\n            historyViewModel.historyPagedList.observe(this, new Observer<PagedList<Product>>() {\r\n                @Override\r\n                public void onChanged(@Nullable PagedList<Product> products) {\r\n                    binding.included.content.historyList.setAdapter(historyAdapter);\r\n                    historyAdapter.submitList(products);\r\n                    historyAdapter.notifyDataSetChanged();\r\n                    products.addWeakCallback(null, productCallback);\r\n                }\r\n            });\r\n        } else {\r\n            showOrHideViews(View.INVISIBLE);\r\n            binding.included.content.textViewHistory.setVisibility(View.GONE);\r\n            showSnackBar();\r\n        }\r\n\r\n    }\r\n\r\n    private void flipImages(ArrayList<Integer> images) {\r\n        for (int image : images) {\r\n            ImageView imageView = new ImageView(this);\r\n            imageView.setBackgroundResource(image);\r\n            binding.included.content.imageSlider.addView(imageView);\r\n        }\r\n\r\n        binding.included.content.imageSlider.setFlipInterval(2000);\r\n        binding.included.content.imageSlider.setAutoStart(true);\r\n\r\n        // Set the animation for the view that enters the screen\r\n        binding.included.content.imageSlider.setInAnimation(this, R.anim.slide_in_right);\r\n        // Set the animation for the view leaving th screen\r\n        binding.included.content.imageSlider.setOutAnimation(this, R.anim.slide_out_left);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.txtSeeAllMobiles:\r\n                Intent mobileIntent = new Intent(this, AllMobilesActivity.class);\r\n                startActivity(mobileIntent);\r\n                break;\r\n            case R.id.txtSeeAllLaptops:\r\n                Intent laptopIntent = new Intent(this, AllLaptopsActivity.class);\r\n                startActivity(laptopIntent);\r\n                break;\r\n            case R.id.plus:\r\n                showCustomAlertDialog();\r\n                break;\r\n            case R.id.txtCash:\r\n                showNormalAlertDialog(getString(R.string.cash));\r\n                break;\r\n            case R.id.txtReturn:\r\n                showNormalAlertDialog(getString(R.string.returnProduct));\r\n                break;\r\n            case R.id.txtSearch:\r\n                Intent searchIntent = new Intent(ProductActivity.this, SearchActivity.class);\r\n                startActivity(searchIntent);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void showNormalAlertDialog(String message) {\r\n        AlertDialog dialog = new AlertDialog.Builder(this)\r\n                .setMessage(message)\r\n                .setPositiveButton(R.string.ok, null).show();\r\n\r\n        dialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(getResources().getColor(R.color.blue));\r\n    }\r\n\r\n    private void showCustomAlertDialog() {\r\n        final Dialog dialog = new Dialog(ProductActivity.this);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.custom_image_dialog);\r\n\r\n        Button takePicture = dialog.findViewById(R.id.takePicture);\r\n        Button useGallery = dialog.findViewById(R.id.useGallery);\r\n\r\n        takePicture.setEnabled(true);\r\n        useGallery.setEnabled(true);\r\n\r\n        takePicture.setOnClickListener(v -> {\r\n            launchCamera();\r\n            dialog.cancel();\r\n        });\r\n\r\n        useGallery.setOnClickListener(v -> {\r\n            getImageFromGallery();\r\n            dialog.cancel();\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private void getImageFromGallery() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (ProductActivity.this.checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED &&\r\n                    ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n                requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE}, READ_EXTERNAL_STORAGE_CODE);\r\n            } else {\r\n                try {\r\n                    Intent getIntent = new Intent(Intent.ACTION_GET_CONTENT);\r\n                    getIntent.setType(\"image/*\");\r\n\r\n                    Intent pickIntent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n\r\n                    Intent chooserIntent = Intent.createChooser(getIntent, \"Select Image\");\r\n                    chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, new Intent[]{pickIntent});\r\n\r\n                    startActivityForResult(chooserIntent, GALLERY_REQUEST);\r\n                } catch (Exception exp) {\r\n                    Log.i(\"Error\", exp.toString());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void launchCamera() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (checkSelfPermission(Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n                requestPermissions(new String[]{Manifest.permission.CAMERA}, CAMERA_PERMISSION_CODE);\r\n            } else {\r\n                Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                startActivityForResult(cameraIntent, CAMERA_REQUEST);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == GALLERY_REQUEST && resultCode == RESULT_OK) {\r\n            selectedImage = data.getData();\r\n            circleImageView.setImageURI(selectedImage);\r\n\r\n            String filePath = getRealPathFromURI(this, selectedImage);\r\n            Log.d(TAG, \"onActivityResult: \" + filePath);\r\n\r\n            uploadPhoto(String.valueOf(filePath));\r\n        } else if (requestCode == CAMERA_REQUEST && resultCode == RESULT_OK) {\r\n            Bitmap photo = (Bitmap) data.getExtras().get(\"data\");\r\n            circleImageView.setImageBitmap(photo);\r\n\r\n            Uri uriForImage = getImageUri(this, photo);\r\n            String filePath = getRealPathFromURI(this, uriForImage);\r\n            Log.d(TAG, \"onActivityResult: Camera\" + filePath);\r\n\r\n            uploadPhoto(String.valueOf(filePath));\r\n\r\n        }\r\n    }\r\n\r\n    private void uploadPhoto(String pathname) {\r\n        uploadPhotoViewModel.uploadPhoto(pathname).observe(this, responseBody -> {\r\n            Toast.makeText(this, \"Image Uploaded\", Toast.LENGTH_SHORT).show();\r\n        });\r\n    }\r\n\r\n    private void getUserImage() {\r\n        userImageViewModel.getUserImage(LoginUtils.getInstance(this).getUserInfo().getId()).observe(this, response -> {\r\n            if (response != null) {\r\n                String imageUrl =  response.getImage().replaceAll(\"\\\\\\\\\", \"/\");\r\n\r\n                Log.d(TAG, \"GET USER IMAGE : \" + imageUrl);\r\n                RequestOptions options = new RequestOptions()\r\n                        .centerCrop()\r\n                        .placeholder(R.drawable.profile_picture)\r\n                        .diskCacheStrategy(DiskCacheStrategy.ALL)\r\n                        .priority(Priority.HIGH)\r\n                        .dontAnimate()\r\n                        .dontTransform();\r\n\r\n                Glide.with(getApplicationContext())\r\n                        .load(imageUrl)\r\n                        .apply(options)\r\n                        .into(circleImageView);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void showSnackBar() {\r\n        snack.getView().setBackgroundColor(ContextCompat.getColor(this, R.color.red));\r\n        snack.show();\r\n    }\r\n\r\n    public void hideSnackBar() {\r\n        snack.dismiss();\r\n    }\r\n\r\n    private void registerNetworkBroadcastForNougat() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            registerReceiver(mNetworkReceiver, new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        registerNetworkBroadcastForNougat();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        unregisterReceiver(mNetworkReceiver);\r\n    }\r\n\r\n    @Override\r\n    public void onNetworkConnected() {\r\n        hideSnackBar();\r\n        showOrHideViews(View.VISIBLE);\r\n        getMobiles();\r\n        getLaptops();\r\n    }\r\n\r\n    @Override\r\n    public void onNetworkDisconnected() {\r\n        showSnackBar();\r\n    }\r\n\r\n    @Override\r\n    public void onClick(Product product) {\r\n        Intent intent = new Intent(ProductActivity.this, DetailsActivity.class);\r\n        // Pass an object of product class\r\n        intent.putExtra(PRODUCT, (product));\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.search, menu);\r\n\r\n        MenuItem addMenu = menu.findItem(R.id.action_addProduct);\r\n        if (LoginUtils.getInstance(this).getUserInfo().isActive()) {\r\n            addMenu.setVisible(true);\r\n        } else {\r\n            addMenu.setVisible(false);\r\n        }\r\n\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_cart:\r\n                Intent cartIntent = new Intent(this, CartActivity.class);\r\n                startActivity(cartIntent);\r\n                return true;\r\n            case R.id.action_addProduct:\r\n              //  Intent addProductIntent = new Intent(this, AddProductActivity.class);\r\n              //  startActivity(addProductIntent);\r\n                return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void showOrHideViews(int view) {\r\n        binding.included.content.textViewMobiles.setVisibility(view);\r\n        binding.included.content.txtSeeAllMobiles.setVisibility(view);\r\n        binding.included.content.textViewLaptops.setVisibility(view);\r\n        binding.included.content.txtSeeAllLaptops.setVisibility(view);\r\n        binding.included.content.txtCash.setVisibility(view);\r\n        binding.included.content.txtReturn.setVisibility(view);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int id = menuItem.getItemId();\r\n\r\n        if (id == R.id.nav_mobiles) {\r\n            goToCategoryActivity(\"Mobile\");\r\n        } else if (id == R.id.nav_laptops) {\r\n            goToCategoryActivity(\"Laptop\");\r\n        } else if (id == R.id.nav_babies) {\r\n            goToCategoryActivity(\"Baby\");\r\n        } else if (id == R.id.nav_toys) {\r\n            goToCategoryActivity(\"Toy\");\r\n        } else if (id == R.id.nav_trackOrder) {\r\n            Intent orderIntent = new Intent(this, OrdersActivity.class);\r\n            startActivity(orderIntent);\r\n        } else if (id == R.id.nav_myAccount) {\r\n            Intent accountIntent = new Intent(this, AccountActivity.class);\r\n            startActivity(accountIntent);\r\n        } else if (id == R.id.nav_newsFeed) {\r\n            Intent newsFeedIntent = new Intent(this, NewsFeedActivity.class);\r\n            startActivity(newsFeedIntent);\r\n        } else if (id == R.id.nav_wishList) {\r\n            Intent wishListIntent = new Intent(this, WishListActivity.class);\r\n            startActivity(wishListIntent);\r\n        }else if (id == R.id.nav_settings) {\r\n            Intent SettingsIntent = new Intent(this, NavSettings.class);\r\n            startActivity(SettingsIntent);\r\n        }\r\n\r\n        DrawerLayout drawer = findViewById(R.id.drawer_layout);\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    private void goToCategoryActivity(String category) {\r\n        Intent categoryIntent = new Intent(this, CategoryActivity.class);\r\n        categoryIntent.putExtra(CATEGORY, category);\r\n        startActivity(categoryIntent);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        DrawerLayout drawer = findViewById(R.id.drawer_layout);\r\n        if (drawer.isDrawerOpen(GravityCompat.START)) {\r\n            drawer.closeDrawer(GravityCompat.START);\r\n        } else {\r\n            closeApplication();\r\n        }\r\n    }\r\n\r\n    private void closeApplication() {\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this)\r\n                .setIcon(android.R.drawable.ic_dialog_alert)\r\n                .setMessage(R.string.want_to_exit)\r\n                .setPositiveButton(R.string.ok, (dialog, which) -> finish())\r\n                .setNegativeButton(R.string.cancel, null)\r\n                .show();\r\n\r\n        alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(getResources().getColor(R.color.darkGreen));\r\n        alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE).setTextColor(getResources().getColor(R.color.darkGreen));\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        productViewModel.invalidate();\r\n        getMobiles();\r\n        getLaptops();\r\n        historyViewModel.invalidate();\r\n        getHistory();\r\n    }\r\n\r\n    private PagedList.Callback productCallback = new PagedList.Callback() {\r\n        @Override\r\n        public void onChanged(int position, int count) {\r\n            Log.d(TAG, \"onChanged: \"+ count);\r\n        }\r\n\r\n        @Override\r\n        public void onInserted(int position, int count) {\r\n            Log.d(TAG, \"onInserted: \"+ count);\r\n            if (count != 0) {\r\n                binding.included.content.textViewHistory.setVisibility(View.VISIBLE);\r\n                historyAdapter.notifyOnInsertedItem(position);\r\n                getHistory();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onRemoved(int position, int count) {\r\n            Log.d(TAG, \"onRemoved: \"+ count);\r\n        }\r\n    };\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/shopping_point/user_shopping_point/view/ProductActivity.java	(revision 680a95b2f6ab30a64d2b987df3e93a6f941e2463)
+++ app/src/main/java/com/shopping_point/user_shopping_point/view/ProductActivity.java	(date 1605082044875)
@@ -36,8 +36,6 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 import android.widget.Toast;
-
-
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.Priority;
 import com.bumptech.glide.load.engine.DiskCacheStrategy;
@@ -64,7 +62,6 @@
 import static com.shopping_point.user_shopping_point.utils.Constant.CAMERA_REQUEST;
 import static com.shopping_point.user_shopping_point.utils.Constant.CATEGORY;
 import static com.shopping_point.user_shopping_point.utils.Constant.GALLERY_REQUEST;
-import static com.shopping_point.user_shopping_point.utils.Constant.LOCALHOST;
 import static com.shopping_point.user_shopping_point.utils.Constant.PRODUCT;
 import static com.shopping_point.user_shopping_point.utils.Constant.READ_EXTERNAL_STORAGE_CODE;
 import static com.shopping_point.user_shopping_point.utils.ImageUtils.getImageUri;
@@ -77,18 +74,14 @@
 
     private static final String TAG = "ProductActivity";
     private ActivityProductBinding binding;
-
     private ProductAdapter mobileAdapter;
     private ProductAdapter laptopAdapter;
     private ProductAdapter historyAdapter;
-
     private ProductViewModel productViewModel;
     private HistoryViewModel historyViewModel;
     private UploadPhotoViewModel uploadPhotoViewModel;
     private UserImageViewModel userImageViewModel;
-
     private Snackbar snack;
-
     private CircleImageView circleImageView,circleImageView1;
     private Uri selectedImage;
 
@@ -459,8 +452,8 @@
                 startActivity(cartIntent);
                 return true;
             case R.id.action_addProduct:
-              //  Intent addProductIntent = new Intent(this, AddProductActivity.class);
-              //  startActivity(addProductIntent);
+//                Intent addProductIntent = new Intent(this, AddProductActivity.class);
+//                startActivity(addProductIntent);
                 return true;
         }
         return super.onOptionsItemSelected(item);
Index: app/src/main/java/com/shopping_point/user_shopping_point/view/PaymentResultActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.shopping_point.user_shopping_point.view;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport com.shopping_point.user_shopping_point.R;\r\nimport com.shopping_point.user_shopping_point.databinding.ActivityPaymentResultBinding;\r\nimport com.shopping_point.user_shopping_point.model.Product;\r\nimport static com.shopping_point.user_shopping_point.storage.LanguageUtils.loadLocale;\r\nimport static com.shopping_point.user_shopping_point.utils.Constant.PRODUCT;\r\npublic class PaymentResultActivity extends AppCompatActivity {\r\nprivate ActivityPaymentResultBinding binding;\r\n\r\nProduct product;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        loadLocale(this);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_payment_result);\r\n        Bundle bundle = getIntent().getExtras();\r\n        product = getIntent().getParcelableExtra(PRODUCT);\r\n\r\n        if( bundle.getString(\"paymentStatus\").equals(\"success\"))\r\n        {\r\n\r\n            binding.imgPaymentResult.setImageResource(R.drawable.ic_payment_sucess);\r\n           binding.paymentStatus.setText(\"Payment Successful\");\r\n            binding.txvPaymentOrderId.setVisibility(View.GONE);\r\n            binding.txvPaymentAmmount.setText(\"Product Price : \" + product.getProductPrice() + \" ₹ \");\r\n            binding.txvPaymentProductName.setText(\"Product Name : \" + product.getProductName());\r\n        }else\r\n        {\r\n           binding.imgPaymentResult.setImageResource(R.drawable.ic_payment_failed);\r\n            binding.paymentStatus.setText(\"Payment Failed\");\r\n            binding.txvPaymentOrderId.setVisibility(View.GONE);\r\n            binding.txvPaymentAmmount.setVisibility(View.GONE);\r\n            binding.txvPaymentProductName.setVisibility(View.GONE);\r\n\r\n }\r\n\r\n        binding.btnHome.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent homeIntent = new Intent(PaymentResultActivity.this, ProductActivity.class);\r\n                startActivity(homeIntent);\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/shopping_point/user_shopping_point/view/PaymentResultActivity.java	(revision 680a95b2f6ab30a64d2b987df3e93a6f941e2463)
+++ app/src/main/java/com/shopping_point/user_shopping_point/view/PaymentResultActivity.java	(date 1605082049301)
@@ -10,6 +10,7 @@
 import com.shopping_point.user_shopping_point.model.Product;
 import static com.shopping_point.user_shopping_point.storage.LanguageUtils.loadLocale;
 import static com.shopping_point.user_shopping_point.utils.Constant.PRODUCT;
+
 public class PaymentResultActivity extends AppCompatActivity {
 private ActivityPaymentResultBinding binding;
 
@@ -17,7 +18,6 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-
         loadLocale(this);
         binding = DataBindingUtil.setContentView(this, R.layout.activity_payment_result);
         Bundle bundle = getIntent().getExtras();
@@ -27,19 +27,20 @@
         {
 
             binding.imgPaymentResult.setImageResource(R.drawable.ic_payment_sucess);
-           binding.paymentStatus.setText("Payment Successful");
+           binding.paymentStatus.setText(" Payment Successful ");
             binding.txvPaymentOrderId.setVisibility(View.GONE);
             binding.txvPaymentAmmount.setText("Product Price : " + product.getProductPrice() + " ₹ ");
             binding.txvPaymentProductName.setText("Product Name : " + product.getProductName());
+
         }else
         {
            binding.imgPaymentResult.setImageResource(R.drawable.ic_payment_failed);
-            binding.paymentStatus.setText("Payment Failed");
+            binding.paymentStatus.setText(" Payment Failed ");
             binding.txvPaymentOrderId.setVisibility(View.GONE);
             binding.txvPaymentAmmount.setVisibility(View.GONE);
             binding.txvPaymentProductName.setVisibility(View.GONE);
 
- }
+        }
 
         binding.btnHome.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -49,7 +50,5 @@
             }
         });
 
-
-
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_payment_result.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/card_view_add\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"30dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:padding=\"@dimen/dimen15dp\"\r\n        android:background=\"@color/white\"\r\n        card_view:cardCornerRadius=\"@dimen/dimen10dp\"\r\n        card_view:cardElevation=\"@dimen/dimen5dp\"\r\n        card_view:cardUseCompatPadding=\"true\"\r\n        card_view:elevation=\"@dimen/dimen1dp\">\r\n\r\n <androidx.appcompat.widget.LinearLayoutCompat\r\n     android:layout_width=\"match_parent\"\r\n     android:layout_height=\"match_parent\"\r\n     android:orientation=\"vertical\"\r\n    >\r\n<androidx.appcompat.widget.AppCompatImageView\r\n    android:id=\"@+id/img_Payment_result\"\r\n    android:layout_width=\"@dimen/dimen150dp\"\r\n    android:layout_height=\"@dimen/dimen150dp\"\r\n    android:layout_margin=\"@dimen/dimen24dp\"\r\n    android:layout_gravity=\"center\"\r\n    android:src=\"@drawable/payment_logo\"\r\n\r\n    />\r\n    <TextView\r\n        android:id=\"@+id/paymentStatus\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Payment Successful\"\r\n        android:textSize=\"@dimen/dimen28dp\"\r\n        android:gravity=\"center\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@color/black\"\r\n        android:layout_margin=\"@dimen/dimen5dp\"\r\n        android:layout_marginBottom=\"@dimen/dimen15dp\"\r\n\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txvPaymentProductName\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Product Name\"\r\n        android:gravity=\"center\"\r\n        android:textColor=\"@color/dark\"\r\n        android:layout_margin=\"@dimen/dimen5dp\"\r\n        android:layout_marginBottom=\"@dimen/dimen15dp\"\r\n        android:textSize=\"@dimen/dimen20dp\"\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txvPaymentOrderId\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Order Id\"\r\n        android:gravity=\"center\"\r\n        android:textColor=\"@color/dark\"\r\n        android:layout_margin=\"@dimen/dimen5dp\"\r\n        android:layout_marginBottom=\"@dimen/dimen15dp\"\r\n        android:textSize=\"@dimen/dimen20dp\"\r\n        />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/txvPaymentAmmount\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Payment Amount\"\r\n        android:gravity=\"center\"\r\n        android:textColor=\"@color/dark\"\r\n        android:layout_margin=\"@dimen/dimen5dp\"\r\n        android:layout_marginBottom=\"@dimen/dimen15dp\"\r\n        android:textSize=\"@dimen/dimen20dp\"\r\n        />\r\n     <androidx.appcompat.widget.AppCompatButton\r\n         android:id=\"@+id/btn_home\"\r\n         android:layout_width=\"match_parent\"\r\n         android:layout_height=\"wrap_content\"\r\n         android:layout_marginLeft=\"@dimen/dimen20dp\"\r\n         android:layout_marginTop=\"@dimen/dimen20dp\"\r\n         android:layout_marginRight=\"@dimen/dimen20dp\"\r\n         android:layout_marginBottom=\"@dimen/dimen20dp\"\r\n         android:background=\"@drawable/custom_button_border2\"\r\n         android:text=\"Continue Shopping\"\r\n         android:textColor=\"@color/white\"\r\n         android:textAllCaps=\"false\"\r\n         android:textSize=\"@dimen/dimen18sp\" />\r\n </androidx.appcompat.widget.LinearLayoutCompat>\r\n    </androidx.cardview.widget.CardView>\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_payment_result.xml	(revision 680a95b2f6ab30a64d2b987df3e93a6f941e2463)
+++ app/src/main/res/layout/activity_payment_result.xml	(date 1605081172419)
@@ -21,6 +21,7 @@
      android:layout_width="match_parent"
      android:layout_height="match_parent"
      android:orientation="vertical"
+     android:layout_margin="@dimen/dimen24dp"
     >
 <androidx.appcompat.widget.AppCompatImageView
     android:id="@+id/img_Payment_result"
@@ -28,6 +29,7 @@
     android:layout_height="@dimen/dimen150dp"
     android:layout_margin="@dimen/dimen24dp"
     android:layout_gravity="center"
+    android:layout_marginTop="@dimen/dimen35dp"
     android:src="@drawable/payment_logo"
 
     />
@@ -52,6 +54,7 @@
         android:text="Product Name"
         android:gravity="center"
         android:textColor="@color/dark"
+        android:layout_marginTop="@dimen/dimen35dp"
         android:layout_margin="@dimen/dimen5dp"
         android:layout_marginBottom="@dimen/dimen15dp"
         android:textSize="@dimen/dimen20dp"
@@ -88,7 +91,7 @@
          android:layout_marginLeft="@dimen/dimen20dp"
          android:layout_marginTop="@dimen/dimen20dp"
          android:layout_marginRight="@dimen/dimen20dp"
-         android:layout_marginBottom="@dimen/dimen20dp"
+         android:layout_marginBottom="@dimen/dimen35dp"
          android:background="@drawable/custom_button_border2"
          android:text="Continue Shopping"
          android:textColor="@color/white"
